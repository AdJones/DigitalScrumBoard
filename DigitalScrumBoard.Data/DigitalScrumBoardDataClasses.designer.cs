#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalScrumBoard.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnetdb")]
	public partial class DigitalScrumBoardDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    #endregion
		
		public DigitalScrumBoardDataClassesDataContext() : 
				base(global::DigitalScrumBoard.Data.Properties.Settings.Default.aspnetdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DigitalScrumBoardDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DigitalScrumBoardDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DigitalScrumBoardDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DigitalScrumBoardDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Text;
		
		private int _Left;
		
		private int _Top;
		
		private int _Type;
		
		private int _OwnerID;
		
		private int _SprintID;
		
		private string _CurrentCol;
		
		private int _TimeRemaining;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLeftChanging(int value);
    partial void OnLeftChanged();
    partial void OnTopChanging(int value);
    partial void OnTopChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOwnerIDChanging(int value);
    partial void OnOwnerIDChanged();
    partial void OnSprintIDChanging(int value);
    partial void OnSprintIDChanged();
    partial void OnCurrentColChanging(string value);
    partial void OnCurrentColChanged();
    partial void OnTimeRemainingChanging(int value);
    partial void OnTimeRemainingChanged();
    #endregion
		
		public Task()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Left]", Storage="_Left", DbType="Int NOT NULL")]
		public int Left
		{
			get
			{
				return this._Left;
			}
			set
			{
				if ((this._Left != value))
				{
					this.OnLeftChanging(value);
					this.SendPropertyChanging();
					this._Left = value;
					this.SendPropertyChanged("Left");
					this.OnLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Top]", Storage="_Top", DbType="Int NOT NULL")]
		public int Top
		{
			get
			{
				return this._Top;
			}
			set
			{
				if ((this._Top != value))
				{
					this.OnTopChanging(value);
					this.SendPropertyChanging();
					this._Top = value;
					this.SendPropertyChanged("Top");
					this.OnTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int NOT NULL")]
		public int OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SprintID", DbType="Int NOT NULL")]
		public int SprintID
		{
			get
			{
				return this._SprintID;
			}
			set
			{
				if ((this._SprintID != value))
				{
					this.OnSprintIDChanging(value);
					this.SendPropertyChanging();
					this._SprintID = value;
					this.SendPropertyChanged("SprintID");
					this.OnSprintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentCol
		{
			get
			{
				return this._CurrentCol;
			}
			set
			{
				if ((this._CurrentCol != value))
				{
					this.OnCurrentColChanging(value);
					this.SendPropertyChanging();
					this._CurrentCol = value;
					this.SendPropertyChanged("CurrentCol");
					this.OnCurrentColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeRemaining", DbType="Int NOT NULL")]
		public int TimeRemaining
		{
			get
			{
				return this._TimeRemaining;
			}
			set
			{
				if ((this._TimeRemaining != value))
				{
					this.OnTimeRemainingChanging(value);
					this.SendPropertyChanging();
					this._TimeRemaining = value;
					this.SendPropertyChanged("TimeRemaining");
					this.OnTimeRemainingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
